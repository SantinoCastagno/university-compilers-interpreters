lexema program, token(keyword,program)
lexema OperacionesBasicas, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
lexema var, token(keyword,var)
lexema numero1, token(id, puntero-a-ts)
lexema ,, token(coma, null)
lexema numero2, token(id, puntero-a-ts)
lexema ,, token(coma, null)
lexema suma, token(id, puntero-a-ts)
lexema ,, token(coma, null)
lexema resta, token(id, puntero-a-ts)
lexema ,, token(coma, null)
lexema multiplicacion, token(id, puntero-a-ts)
lexema ,, token(coma, null)
lexema division, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema integer, token(keyword,integer)
lexema ;, token(puntoComa, null)
lexema begin, token(keyword,begin)
token(null, null)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Ingrese, token(id, puntero-a-ts)
lexema el, token(id, puntero-a-ts)
lexema primer, token(id, puntero-a-ts)
lexema numero, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema readln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
lexema numero1, token(id, puntero-a-ts)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Ingrese, token(id, puntero-a-ts)
lexema el, token(id, puntero-a-ts)
lexema segundo, token(id, puntero-a-ts)
lexema numero, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema readln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
lexema numero2, token(id, puntero-a-ts)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
token(null, null)
lexema suma, token(id, puntero-a-ts)
lexema :=, token(asignacion, null)
lexema numero1, token(id, puntero-a-ts)
lexema +, token(operadorAritmetico, suma)
lexema numero2, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
lexema resta, token(id, puntero-a-ts)
lexema :=, token(asignacion, null)
lexema numero1, token(id, puntero-a-ts)
lexema -, token(operadorAritmetico, resta)
lexema numero2, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
lexema multiplicacion, token(id, puntero-a-ts)
lexema :=, token(asignacion, null)
lexema numero1, token(id, puntero-a-ts)
lexema *, token(operadorAritmetico, multi)
lexema numero2, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
token(null, null)
lexema if, token(keyword,if)
lexema numero2, token(id, puntero-a-ts)
lexema <>, token(operadorRelacional, distinto)
lexema 0, token(enteroDato,0)
lexema then, token(keyword,then)
lexema division, token(id, puntero-a-ts)
lexema :=, token(asignacion, null)
lexema numero1, token(id, puntero-a-ts)
lexema /, token(operadorAritmetico, div)
lexema numero2, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
lexema else, token(keyword,else)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Error, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema No, token(id, puntero-a-ts)
lexema se, token(id, puntero-a-ts)
lexema puede, token(id, puntero-a-ts)
lexema dividir, token(id, puntero-a-ts)
lexema por, token(id, puntero-a-ts)
lexema cero, token(id, puntero-a-ts)
token(null, null)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
token(null, null)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Suma, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ,, token(coma, null)
lexema suma, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema 0, token(enteroDato,0)
lexema :, token(dosPuntos, null)
lexema 2, token(enteroDato,2)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Resta, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ,, token(coma, null)
lexema resta, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema 0, token(enteroDato,0)
lexema :, token(dosPuntos, null)
lexema 2, token(enteroDato,2)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Multiplicacion, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ,, token(coma, null)
lexema multiplicacion, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema 0, token(enteroDato,0)
lexema :, token(dosPuntos, null)
lexema 2, token(enteroDato,2)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema if, token(keyword,if)
lexema numero2, token(id, puntero-a-ts)
lexema <>, token(operadorRelacional, distinto)
lexema 0, token(enteroDato,0)
lexema then, token(keyword,then)
lexema writeln, token(id, puntero-a-ts)
lexema (, token(parentesis, '\(')
token(null, null)
lexema Division, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
token(null, null)
lexema ,, token(coma, null)
lexema division, token(id, puntero-a-ts)
lexema :, token(dosPuntos, null)
lexema 0, token(enteroDato,0)
lexema :, token(dosPuntos, null)
lexema 2, token(enteroDato,2)
lexema ), token(parentesis, '\)')
lexema ;, token(puntoComa, null)
lexema readln, token(id, puntero-a-ts)
lexema ;, token(puntoComa, null)
token(null, null)
lexema end, token(keyword,end)
lexema ., token(punto, null)
